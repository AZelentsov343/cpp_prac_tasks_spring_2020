Язык L1 = { a^nb^mc^md^n | m, n > 0 } .
Для данного целого числа k (0 < k < 1000) напечатайте все строки длины k,
принадлежащие данному языку, в лексикографическом порядке.
Запоминать строки в памяти не допускается.
Использование вспомогательных переменных не допускается.
Каждую строку выводите на отдельной строке текста.

Решение реализуйте с помощью рекурсивного спуска,
добавляя вместо проверки входной строки генерацию выходной строки.
В начале решения напишите грамматику для данного языка, допускающую рекурсивный спуск.

Вы можете использовать одну переменную для чтения входного параметра.
Рекурсивные функции могут принимать не более двух целых параметров:
входной параметр и дополнительный параметр генерации.



#include <iostream>

/*
 * grammar
 * S -> aSd
 * S -> bAc
 * A -> bBc
 * A -> \epsilon
 */

void A(int m) {
    if (m > 0) {
        std::cout << 'b';
        A(m - 1);
        std::cout << 'c';
    }
}


void S(int n, int m) {
    std::cout << 'a';
    if (n > 1) {
        S(n - 1, m);
    } else {
        A(m);
    }
    std::cout << 'd';
}

void rec(int n, int m) {
    S(n, m);
    std::cout << std::endl;
    if (n > 1) {
        rec(n - 1, m + 1);
    }
}


int main() {
    int k;
    std::cin >> k;
    if (k >= 4 && k % 2 == 0) {
        rec(k/2 - 1, 1);
    }
    return 0;
}